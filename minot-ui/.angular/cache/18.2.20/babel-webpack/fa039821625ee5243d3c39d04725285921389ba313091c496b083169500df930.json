{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport __NG_CLI_RESOURCE__0 from \"./login.component.html?ngResource\";\nimport __NG_CLI_RESOURCE__1 from \"./login.component.css?ngResource\";\nimport { Component, inject } from '@angular/core';\nimport { GoogleLoginComponent } from '../google-login/google-login.component';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nlet LoginComponent = class LoginComponent {\n  _formBuilder = inject(FormBuilder);\n  _authService = inject(AuthService);\n  _router = inject(Router);\n  hidePassword = true;\n  loginError = '';\n  form = this._formBuilder.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required]\n  });\n  passwordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n  login() {\n    if (this.form.valid) {\n      this.loginError = '';\n      this._authService.login(this.form.value).subscribe({\n        next: res => {\n          this._router.navigate(['/home']);\n        },\n        error: err => {\n          const error = err.error;\n          this.loginError = error.error;\n        }\n      });\n    } else {\n      this.form.markAllAsTouched();\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [GoogleLoginComponent, ReactiveFormsModule],\n  template: __NG_CLI_RESOURCE__0,\n  styles: [__NG_CLI_RESOURCE__1]\n})], LoginComponent);\nexport default LoginComponent;","map":{"version":3,"names":["Component","inject","GoogleLoginComponent","FormBuilder","ReactiveFormsModule","Validators","AuthService","Router","LoginComponent","_formBuilder","_authService","_router","hidePassword","loginError","form","group","email","required","password","passwordVisibility","login","valid","value","subscribe","next","res","navigate","error","err","markAllAsTouched","__decorate","selector","standalone","imports","template","__NG_CLI_RESOURCE__0"],"sources":["/home/alejandro/Desktop/minot/minot-ui/src/app/auth/components/login/login.component.ts"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { GoogleLoginComponent } from '../google-login/google-login.component';\nimport { FormBuilder, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\nimport { LoginResquest } from '../../model/login-resquest';\nimport { HttpErrorResponse } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [GoogleLoginComponent, ReactiveFormsModule],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.css',\n})\nexport default class LoginComponent {\n  private _formBuilder = inject(FormBuilder);\n  private _authService = inject(AuthService);\n  private _router = inject(Router);\n  hidePassword: boolean = true;\n  loginError: string = '';\n\n  form = this._formBuilder.group({\n    email: ['', [Validators.required, Validators.email]],\n    password: ['', Validators.required],\n  });\n\n  passwordVisibility() {\n    this.hidePassword = !this.hidePassword;\n  }\n\n  login() {\n    if (this.form.valid) {\n      this.loginError = '';\n      this._authService.login(this.form.value as LoginResquest).subscribe({\n        next: (res) => {\n          this._router.navigate(['/home']);\n        },\n        error: (err: HttpErrorResponse) => {\n          const error: { error: string } = err.error;\n          this.loginError = error.error;\n        },\n      });\n    } else {\n      this.form.markAllAsTouched();\n    }\n  }\n}\n"],"mappings":";;;AAAA,SAASA,SAAS,EAAEC,MAAM,QAAQ,eAAe;AACjD,SAASC,oBAAoB,QAAQ,wCAAwC;AAC7E,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,UAAU,QAAQ,gBAAgB;AAC7E,SAASC,WAAW,QAAQ,6BAA6B;AACzD,SAASC,MAAM,QAAQ,iBAAiB;AAWzB,IAAMC,cAAc,GAApB,MAAMA,cAAc;EACzBC,YAAY,GAAGR,MAAM,CAACE,WAAW,CAAC;EAClCO,YAAY,GAAGT,MAAM,CAACK,WAAW,CAAC;EAClCK,OAAO,GAAGV,MAAM,CAACM,MAAM,CAAC;EAChCK,YAAY,GAAY,IAAI;EAC5BC,UAAU,GAAW,EAAE;EAEvBC,IAAI,GAAG,IAAI,CAACL,YAAY,CAACM,KAAK,CAAC;IAC7BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACW,KAAK,CAAC,CAAC;IACpDE,QAAQ,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACY,QAAQ;GACnC,CAAC;EAEFE,kBAAkBA,CAAA;IAChB,IAAI,CAACP,YAAY,GAAG,CAAC,IAAI,CAACA,YAAY;EACxC;EAEAQ,KAAKA,CAAA;IACH,IAAI,IAAI,CAACN,IAAI,CAACO,KAAK,EAAE;MACnB,IAAI,CAACR,UAAU,GAAG,EAAE;MACpB,IAAI,CAACH,YAAY,CAACU,KAAK,CAAC,IAAI,CAACN,IAAI,CAACQ,KAAsB,CAAC,CAACC,SAAS,CAAC;QAClEC,IAAI,EAAGC,GAAG,IAAI;UACZ,IAAI,CAACd,OAAO,CAACe,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC;QACDC,KAAK,EAAGC,GAAsB,IAAI;UAChC,MAAMD,KAAK,GAAsBC,GAAG,CAACD,KAAK;UAC1C,IAAI,CAACd,UAAU,GAAGc,KAAK,CAACA,KAAK;QAC/B;OACD,CAAC;IACJ,CAAC,MAAM;MACL,IAAI,CAACb,IAAI,CAACe,gBAAgB,EAAE;IAC9B;EACF;CACD;AAhCoBrB,cAAc,GAAAsB,UAAA,EAPlC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,WAAW;EACrBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAC/B,oBAAoB,EAAEE,mBAAmB,CAAC;EACpD8B,QAAA,EAAAC,oBAAqC;;CAEtC,CAAC,C,EACmB3B,cAAc,CAgClC;eAhCoBA,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}